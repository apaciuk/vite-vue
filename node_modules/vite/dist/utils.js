"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const lru_cache_1 = __importDefault(require("lru-cache"));
const os_1 = __importDefault(require("os"));
const moduleReadCache = new lru_cache_1.default({
    max: 10000
});
async function cachedRead(path, encoding) {
    const lastModified = (await fs_1.promises.stat(path)).mtimeMs;
    const cached = moduleReadCache.get(path);
    if (cached && cached.lastModified === lastModified) {
        return cached.content;
    }
    const content = await fs_1.promises.readFile(path, encoding);
    moduleReadCache.set(path, {
        content,
        lastModified
    });
    return content;
}
exports.cachedRead = cachedRead;
function getIPv4AddressList() {
    const networkInterfaces = os_1.default.networkInterfaces();
    let result = [];
    Object.keys(networkInterfaces).forEach((key) => {
        const ips = (networkInterfaces[key] || [])
            .filter((details) => details.family === 'IPv4')
            .map((detail) => detail.address.replace('127.0.0.1', 'localhost'));
        result = result.concat(ips);
    });
    return result;
}
exports.getIPv4AddressList = getIPv4AddressList;
