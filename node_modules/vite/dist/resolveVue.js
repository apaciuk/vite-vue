"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const resolve_from_1 = __importDefault(require("resolve-from"));
const chalk_1 = __importDefault(require("chalk"));
let resolved = undefined;
const toBuildPaths = (p) => ({
    ...p,
    vue: p.vue.replace('esm-browser', 'esm-bundler')
});
// Resolve the correct `vue` and `@vue.compiler-sfc` to use.
// If the user project has local installations of these, they should be used;
// otherwise, fallback to the dependency of Vite itself.
function resolveVue(root, isBuild = false) {
    if (resolved) {
        return isBuild ? toBuildPaths(resolved) : resolved;
    }
    let vuePath;
    let compilerPath;
    let hasLocalVue = true;
    let vueVersion;
    try {
        // see if user has local vue installation
        const userVuePkg = resolve_from_1.default(root, 'vue/package.json');
        vueVersion = require(userVuePkg).version;
        vuePath = path_1.default.join(path_1.default.dirname(userVuePkg), 'dist/vue.runtime.esm-browser.js');
        // also resolve matching sfc compiler
        try {
            const compilerPkgPath = resolve_from_1.default(root, '@vue/compiler-sfc/package.json');
            const compilerPkg = require(compilerPkgPath);
            if (compilerPkg.version !== require(userVuePkg).version) {
                throw new Error();
            }
            compilerPath = path_1.default.join(path_1.default.dirname(compilerPkgPath), compilerPkg.main);
        }
        catch (e) {
            // user has local vue but has no compiler-sfc
            console.error(chalk_1.default.red(`[vite] Error: a local installation of \`vue\` is detected but ` +
                `no matching \`@vue/compiler-sfc\` is found. Make sure to install ` +
                `both and use the same version.`));
            compilerPath = require.resolve('@vue/compiler-sfc');
        }
    }
    catch (e) {
        // user has no local vue, use vite's dependency version
        hasLocalVue = false;
        vuePath = require.resolve('vue/dist/vue.runtime.esm-browser.js');
        vueVersion = require('vue/package.json').version;
        compilerPath = require.resolve('@vue/compiler-sfc');
    }
    resolved = {
        vue: vuePath,
        version: vueVersion,
        hasLocalVue,
        compiler: compilerPath
    };
    return isBuild ? toBuildPaths(resolved) : resolved;
}
exports.resolveVue = resolveVue;
function resolveCompiler(cwd) {
    return require(resolveVue(cwd).compiler);
}
exports.resolveCompiler = resolveCompiler;
